#!/usr/bin/env node

/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _eventStream = __webpack_require__(1);

	var _eventStream2 = _interopRequireDefault(_eventStream);

	var _jsonstream = __webpack_require__(2);

	var _jsonstream2 = _interopRequireDefault(_jsonstream);

	var _ServerUtils = __webpack_require__(3);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	process.stdin.pipe(_jsonstream2.default.parse()).pipe(_eventStream2.default.map((0, _ServerUtils.createRequestHandler)(process.cwd()))).pipe(process.stdout);

/***/ },
/* 1 */
/***/ function(module, exports) {

	module.exports = require("event-stream");

/***/ },
/* 2 */
/***/ function(module, exports) {

	module.exports = require("jsonstream");

/***/ },
/* 3 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.createRequestHandler = createRequestHandler;

	var _path = __webpack_require__(4);

	var _path2 = _interopRequireDefault(_path);

	var _invariant = __webpack_require__(5);

	var _invariant2 = _interopRequireDefault(_invariant);

	var _RenderUtils = __webpack_require__(6);

	var _ModuleUtils = __webpack_require__(8);

	var _react = __webpack_require__(9);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function handleRequest(workingDir, request, callback) {
	  var componentPath = request.component;
	  var renderMethod = request.render;
	  var props = request.props;

	  (0, _invariant2.default)(componentPath != null, 'Missing { component } in request');

	  var render = undefined;
	  if (renderMethod == null || renderMethod === 'renderToString') {
	    render = _RenderUtils.renderToString;
	  } else if (renderMethod === 'renderToStaticMarkup') {
	    render = _RenderUtils.renderToStaticMarkup;
	  } else {
	    var methodFile = _path2.default.resolve(workingDir, renderMethod);

	    try {
	      render = (0, _ModuleUtils.getDefaultExports)(methodFile);
	    } catch (error) {
	      if (error.code !== 'MODULE_NOT_FOUND') process.stderr.write(error.stack + '\n');
	    }
	  }

	  (0, _invariant2.default)(typeof render === 'function', 'Cannot load render method: %s', renderMethod);

	  var componentFile = _path2.default.resolve(workingDir, componentPath);

	  var component = undefined;
	  try {
	    component = (0, _ModuleUtils.getDefaultExports)(componentFile);
	  } catch (error) {
	    if (error.code !== 'MODULE_NOT_FOUND') process.stderr.write(error.stack + '\n');
	  }

	  (0, _invariant2.default)(component != null, 'Cannot load component: %s', componentPath);

	  render((0, _react.createElement)(component, props), callback);
	}

	function createRequestHandler(workingDir) {
	  return function (request, callback) {
	    try {
	      handleRequest(workingDir, request, function (error, html) {
	        if (error) {
	          callback(error);
	        } else if (typeof html !== 'string') {
	          // Crash the server process.
	          callback(new Error('Render method must return a string'));
	        } else {
	          callback(null, JSON.stringify({ html: html }));
	        }
	      });
	    } catch (error) {
	      callback(null, JSON.stringify({ error: error.message }));
	    }
	  };
	}

/***/ },
/* 4 */
/***/ function(module, exports) {

	module.exports = require("path");

/***/ },
/* 5 */
/***/ function(module, exports) {

	module.exports = require("invariant");

/***/ },
/* 6 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.renderToStaticMarkup = renderToStaticMarkup;
	exports.renderToString = renderToString;

	var _server = __webpack_require__(7);

	var _server2 = _interopRequireDefault(_server);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function renderToStaticMarkup(element, callback) {
	  return callback(null, _server2.default.renderToStaticMarkup(element));
	}

	function renderToString(element, callback) {
	  return callback(null, _server2.default.renderToString(element));
	}

/***/ },
/* 7 */
/***/ function(module, exports) {

	module.exports = require("react-dom/server");

/***/ },
/* 8 */
/***/ function(module, exports) {

	"use strict";

	// We tell webpack not to parse this file (using noParse)
	// so we can use node's require in the generated bundle.

	exports.getDefaultExports = function (file) {
	  var moduleExports = require(file);

	  // Return the "default" export if using ES2015 modules.
	  if (moduleExports && moduleExports.default) return moduleExports.default;

	  return moduleExports;
	};

/***/ },
/* 9 */
/***/ function(module, exports) {

	module.exports = require("react");

/***/ }
/******/ ]);